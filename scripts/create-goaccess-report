#!/bin/bash -x

GOACCESS_DIR=/tmp/goaccess  # local build directory
ACCESS_LOG=access.log       # concatenated log file

S3_LOG_URI='s3://sgd-prod-elb-logs/AWSLogs/977508801820/elasticloadbalancing/us-west-2/'    # source log bucket
S3_REPORTS_URI='s3://sgd-goaccess-reports/web/'                                             # target report bucket

/usr/bin/mkdir -p $GOACCESS_DIR
cd $GOACCESS_DIR
/bin/cp /dev/null $ACCESS_LOG

OPTSTRING="b:e:"

while getopts ${OPTSTRING} opt; do
  case ${opt} in
    b)
      if [[ $OPTARG =~ [0-9]{8}$ && ! $OPTARG =~ [0-9]{9} ]]; then
        REPORT_BEGIN_DATE=$OPTARG
      else
        echo "$0: invalid begin date.  Date should be of form YYYYMMDD.  Exiting."
        exit 1
      fi
      ;;

    e)
      if [[ $OPTARG =~ [0-9]{8}$ && ! $OPTARG =~ [0-9]{9} ]]; then
        REPORT_END_DATE=$OPTARG
      else
        echo "$0: invalid end date.  Date should be of form YYYYMMDD.  Exiting."
        exit 1
      fi
      ;;

    :)
      echo "Option -${OPTARG} requires an argument."
      exit 1
      ;;

    ?)
      echo "Invalid option: -${opt}."
      exit 1
      ;;
  esac
done

TODAY=$(/bin/date +%Y%m%d)

if [[ -z $REPORT_BEGIN_DATE ]]
  REPORT_BEGIN_DATE=$(/bin/date -d "last Sunday" +%Y%m%d)
;;

if [[ -z $REPORT_END_DATE ]]
  REPORT_END_DATE=$(/bin/date -d "last Sunday +6 days" +%Y%m%d)
fi
;;

if [ $TODAY < $REPORT_END_DATE ]; then
    REPORT_END_DATE=$TODAY
fi

REPORT_FILE=${REPORT_BEGIN_DATE}-goaccess-report.html
if [ -f $REPORT_FILE ]; then
    echo "$REPORT_FILE already exists.  Exiting."
    exit 1
fi

LOG_DATE=$REPORT_BEGIN_DATE
LOG_YEAR=$(/bin/date -d $LOG_DATE +%Y)
LOG_MONTH=$(/bin/date -d $LOG_DATE +%m)
LOG_DAY=$(/bin/date -d $LOG_DATE +%d)

while [ $LOG_DATE != $REPORT_END_DATE ]; do 
    /usr/bin/aws s3 sync ${S3_LOG_URI}/${LOG_YEAR}/${LOG_MONTH}/${LOG_DAY}/ .
    LOG_DATE=$(/bin/date -I -d "$LOG_DATE + 1 day" +%Y%m%d)
done

# zcat *.gz will sometimes fail for large number of *.gz files
# use this loop as a workaround

for logfile in *.gz
do
    /usr/bin/zcat $logfile >> $ACCESS_LOG
done

/usr/bin/goaccess access.log --log-format=AWSELB -a -o $REPORT_FILE

exit 0
